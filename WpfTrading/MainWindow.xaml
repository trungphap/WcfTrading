<Window x:Class="WpfTrading.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfTrading"
        xmlns:vm="clr-namespace:ViewModels;assembly=ViewModels"        
        mc:Ignorable="d"
        Loaded="Window_Loaded"
       
        Title="Poc Trading" Height="600" Width="400">
    <Window.Resources>
        <vm:ProducerConsumer x:Key="cs"/>
        <local:ExecutableToReadonlyConverter x:Key="InverseBool"/>
        <local:BoolToFontConverter x:Key="BoolToFont"/>
        <local:TotalConverter x:Key="TC"/>
    </Window.Resources>
    <Border Padding="10">

        <StackPanel>
            <!-- Set and commnand queue -->

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <TextBlock  Margin="0 0 10 0" Grid.Column="0" Text="Queue length"></TextBlock>
                <TextBox  x:Name="txtQueueLength" TextAlignment="Right" Grid.Column="1" 
                         Text="{Binding QueueShell.FontText, Source={StaticResource cs},Mode=TwoWay}"
                          IsReadOnly="{Binding QueueShell.StatusExecutable, Source={StaticResource cs},
                                        Converter={StaticResource InverseBool}}"  
                           Background="{Binding QueueShell.StatusExecutable, Source={StaticResource cs}
                           ,Converter={StaticResource BoolToFont}}">

                </TextBox>
                <Button Command="{Binding QueueCommand, Source={StaticResource cs}}"
                        Margin="10 0 0 0" Grid.Column="2" Content="Set queue"
                        CommandParameter="{Binding ElementName=txtQueueLength,Path=Text}"/>
               
                <Button Command="{Binding StopCommand, Source={StaticResource cs}}" FontWeight="Bold" Foreground="Red"
                                             Margin="10 0 0 0" Grid.Column="3" Content="Stop queue" 
                         CommandParameter="{Binding ElementName=txtTotalSteps,Path=Text}"/>
            </Grid>
            <!-- Total step time x 5 for stop queue command-->
            <TextBlock   x:Name="txtTotalSteps" Visibility="Hidden" Height="1">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource TC}">
                        <Binding ElementName="txtStepTimeProducer" Path="Text" Mode="OneWay"/>
                        <Binding ElementName="txtStepTimeConsumer" Path="Text" Mode="OneWay"/>
                        <Binding ElementName="txtStepP2"  Path="Text" Mode="OneWay"/>
                        <Binding ElementName="txtStepc2"  Path="Text" Mode="OneWay"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <!-- Set and commnand Producer 1 -->
            <TextBlock Text="Producer 1" FontWeight="Bold" HorizontalAlignment="Center" Margin="0 3 0 2"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock  Margin="0 0 10 0" Grid.Column="0" Text="Step Time P1"></TextBlock>
                <TextBox  x:Name="txtStepTimeProducer" Grid.Column="1" TextAlignment="Right"      
                             IsReadOnly="{Binding ProducerShell.StatusExecutable, Source={StaticResource cs},
                                   Converter={StaticResource InverseBool}}" 
                            Background="{Binding ProducerShell.StatusExecutable, Source={StaticResource cs}
                           ,Converter={StaticResource BoolToFont}}">
                </TextBox>
                <Button x:Name="btnProduce" Command="{Binding ProduceCommand, Source={StaticResource cs}}" 
                        Margin="10 0 0 0" Grid.Column="2" Content="Run"
                         CommandParameter="{Binding ElementName=txtStepTimeProducer,Path=Text}"/>
                <Button x:Name="btnStopP1" Command="{Binding StopProduce, Source={StaticResource cs}}" 
                        Margin="10,0,0,0" Grid.Column="3" Content="Stop" Height="20" VerticalAlignment="Top"/>

            </Grid>
            <TextBlock Text="{Binding ProducerShell.StatusText, Source={StaticResource cs}}" FontWeight="Bold" Margin="0 10"/>
            <TextBox x:Name="txtDescriptionP1" Padding="2" Text="{Binding ProducerShell.FontText, Source={StaticResource cs}}"/>

            <!-- Set and commnand Consumer 1 -->
            <TextBlock Text="Consumer 1" FontWeight="Bold" HorizontalAlignment="Center" Margin="0 3 0 2"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock  Margin="0 0 10 0" Grid.Column="0" Text="Step Time C1"></TextBlock>
                <TextBox  x:Name="txtStepTimeConsumer" Grid.Column="1" TextAlignment="Right"  
                           IsReadOnly="{Binding Consummer.StatusExecutable, Source={StaticResource cs},
                                        Converter={StaticResource InverseBool}}" 
                            Background="{Binding Consummer.StatusExecutable, Source={StaticResource cs}
                           ,Converter={StaticResource BoolToFont}}">
                </TextBox>
                <Button Command="{Binding ConsumeCommand, Source={StaticResource cs}}"
                        Margin="10 0 0 0" Grid.Column="2" Content="Run"
                        CommandParameter="{Binding ElementName=txtStepTimeConsumer,Path=Text}"/>
                <Button x:Name="btnStopC1" Command="{Binding StopConsumer1, Source={StaticResource cs}}" 
                        Margin="10 0 0 0" Grid.Column="3" Content="Stop"/>

            </Grid>
            <TextBlock Text="{Binding Consummer.StatusText, Source={StaticResource cs}}" FontWeight="Bold" Margin="0 10"/>
            <TextBox x:Name="txtDescriptionC1" Padding="2" Margin="0 5"
                           Text="{Binding Consummer.FontText, Source={StaticResource cs}}"/>




            <Grid>
                <!-- Set and commnand Producer 2 -->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel  Grid.Column="0" Margin="0 0 10 0">
                    <TextBlock x:Name="lblStatus" Text="Producer 2" FontWeight="Black" 
                               TextAlignment="Center" Margin="0 3 0 2"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="lblStepP2" Text="Step time P2" TextAlignment="Left" Grid.Column="0" Margin="0 0 10 0"/>
                        <TextBox x:Name="txtStepP2" Padding="2" Grid.Column="1"  Margin="0 0 0 0"/>
                    </Grid>

                    <TextBlock Text="{Binding ProducerShell2.StatusText, Source={StaticResource cs}}" FontWeight="Bold" Margin="0 10"/>
                    <TextBox x:Name="txtDescriptionP2" Padding="2" Text="{Binding ProducerShell2.FontText, Source={StaticResource cs}}"/>
                    <Button Command="{Binding ProduceCommand2, Source={StaticResource cs}}"
                         Height="20"  Margin="0 5 0 0" Grid.Column="2" Content="Run"
                        CommandParameter="{Binding ElementName=txtStepP2,Path=Text}"/>
                    <Button x:Name="btnStopP2" Command="{Binding StopProduce2, Source={StaticResource cs}}" 
                        Margin="0,5,0,0"  Content="Stop" Height="20" VerticalAlignment="Center"/>
                    <TextBlock Text="Choose number of processes" FontWeight="Bold" Margin="2 5 0 0"/>
                </StackPanel>

                <!-- Set and commnand Consumer 2 -->
                <StackPanel Grid.Column="1">
                    <TextBlock   Text="Consumer 2" FontWeight="Black" TextAlignment="Center" Margin="0 3 0 2"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock x:Name="lblStepc2" Text="Step time C2" TextAlignment="Left" Grid.Column="0" Margin="0 0 10 0"/>
                        <TextBox x:Name="txtStepc2" Padding="2" Grid.Column="1"  Margin="0 0 0 0"/>
                    </Grid>
                    <TextBlock Text="{Binding Consummer2.StatusText, Source={StaticResource cs}}" FontWeight="Bold" Margin="0 10"/>
                    <TextBox x:Name="txtDescriptionC2" Padding="2" Text="{Binding Consummer2.FontText, Source={StaticResource cs}}"/>
                    <Button Command="{Binding ConsumeCommand2, Source={StaticResource cs}}"
                         Height="20"  Margin="0 5 0 0" Grid.Column="2" Content="Run"
                        CommandParameter="{Binding ElementName=txtStepc2,Path=Text}"/>
                    <Button x:Name="btnStopC2" Command="{Binding StopConsumer2, Source={StaticResource cs}}" 
                        Margin="0,5,0,0"  Content="Stop" Height="20" VerticalAlignment="Center"/>
                    <ComboBox Padding="0 1 0 1"  Margin="0 5 0 0">
                        <ComboBoxItem HorizontalAlignment="Center" Content="1"></ComboBoxItem>
                        <ComboBoxItem HorizontalAlignment="Center" Content="2"></ComboBoxItem>
                        <ComboBoxItem HorizontalAlignment="Center" Content="3"></ComboBoxItem>
                        <ComboBoxItem HorizontalAlignment="Center" Content="4"></ComboBoxItem>
                    </ComboBox>
                </StackPanel>

            </Grid>
            <!-- Stop button -->

            <!-- COMBO BOX -->


           
          



            <!-- CHECK BOX -->
            <TextBlock Text="Choose processes" Margin="2 5 0 2" FontWeight="Bold"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel  Grid.Column="0" Margin="0 0 10 0">
                    <CheckBox Checked="Checkbox_Checked" Unchecked="Checkbox_Unchecked"  x:Name="Producer1" Content="Producer 1"/>
                    <CheckBox Checked="Checkbox_Checked" Unchecked="Checkbox_Unchecked"  x:Name="Producer2" Content="Producer 2"/>
                </StackPanel>
                <StackPanel Grid.Column="1">
                    <CheckBox x:Name="Consumer1" Content="Consumer 1"/>
                    <CheckBox x:Name="Consumer2" Content="Consumer 2"/>
                </StackPanel>
            </Grid>

        </StackPanel>
    </Border>
</Window>
