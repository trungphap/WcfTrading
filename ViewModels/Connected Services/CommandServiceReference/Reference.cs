//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ViewModels.CommandServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommandServiceReference.ICommandService")]
    public interface ICommandService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/GetQueueCommand", ReplyAction="http://tempuri.org/ICommandService/GetQueueCommandResponse")]
        object GetQueueCommand(object queueShell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/GetQueueCommand", ReplyAction="http://tempuri.org/ICommandService/GetQueueCommandResponse")]
        System.Threading.Tasks.Task<object> GetQueueCommandAsync(object queueShell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/GetStopCommand", ReplyAction="http://tempuri.org/ICommandService/GetStopCommandResponse")]
        object GetStopCommand(object queueShell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/GetStopCommand", ReplyAction="http://tempuri.org/ICommandService/GetStopCommandResponse")]
        System.Threading.Tasks.Task<object> GetStopCommandAsync(object queueShell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/GetStopTask", ReplyAction="http://tempuri.org/ICommandService/GetStopTaskResponse")]
        object GetStopTask(object taskShell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/GetStopTask", ReplyAction="http://tempuri.org/ICommandService/GetStopTaskResponse")]
        System.Threading.Tasks.Task<object> GetStopTaskAsync(object taskShell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/GetProduceCommand", ReplyAction="http://tempuri.org/ICommandService/GetProduceCommandResponse")]
        object GetProduceCommand(object produceShell, object queueShell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/GetProduceCommand", ReplyAction="http://tempuri.org/ICommandService/GetProduceCommandResponse")]
        System.Threading.Tasks.Task<object> GetProduceCommandAsync(object produceShell, object queueShell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/GetConsumeCommand", ReplyAction="http://tempuri.org/ICommandService/GetConsumeCommandResponse")]
        object GetConsumeCommand(object consumeShell, object queueShell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/GetConsumeCommand", ReplyAction="http://tempuri.org/ICommandService/GetConsumeCommandResponse")]
        System.Threading.Tasks.Task<object> GetConsumeCommandAsync(object consumeShell, object queueShell);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/GetShell", ReplyAction="http://tempuri.org/ICommandService/GetShellResponse")]
        object GetShell(bool statusExecutable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICommandService/GetShell", ReplyAction="http://tempuri.org/ICommandService/GetShellResponse")]
        System.Threading.Tasks.Task<object> GetShellAsync(bool statusExecutable);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommandServiceChannel : ViewModels.CommandServiceReference.ICommandService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommandServiceClient : System.ServiceModel.ClientBase<ViewModels.CommandServiceReference.ICommandService>, ViewModels.CommandServiceReference.ICommandService {
        
        public CommandServiceClient() {
        }
        
        public CommandServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommandServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public object GetQueueCommand(object queueShell) {
            return base.Channel.GetQueueCommand(queueShell);
        }
        
        public System.Threading.Tasks.Task<object> GetQueueCommandAsync(object queueShell) {
            return base.Channel.GetQueueCommandAsync(queueShell);
        }
        
        public object GetStopCommand(object queueShell) {
            return base.Channel.GetStopCommand(queueShell);
        }
        
        public System.Threading.Tasks.Task<object> GetStopCommandAsync(object queueShell) {
            return base.Channel.GetStopCommandAsync(queueShell);
        }
        
        public object GetStopTask(object taskShell) {
            return base.Channel.GetStopTask(taskShell);
        }
        
        public System.Threading.Tasks.Task<object> GetStopTaskAsync(object taskShell) {
            return base.Channel.GetStopTaskAsync(taskShell);
        }
        
        public object GetProduceCommand(object produceShell, object queueShell) {
            return base.Channel.GetProduceCommand(produceShell, queueShell);
        }
        
        public System.Threading.Tasks.Task<object> GetProduceCommandAsync(object produceShell, object queueShell) {
            return base.Channel.GetProduceCommandAsync(produceShell, queueShell);
        }
        
        public object GetConsumeCommand(object consumeShell, object queueShell) {
            return base.Channel.GetConsumeCommand(consumeShell, queueShell);
        }
        
        public System.Threading.Tasks.Task<object> GetConsumeCommandAsync(object consumeShell, object queueShell) {
            return base.Channel.GetConsumeCommandAsync(consumeShell, queueShell);
        }
        
        public object GetShell(bool statusExecutable) {
            return base.Channel.GetShell(statusExecutable);
        }
        
        public System.Threading.Tasks.Task<object> GetShellAsync(bool statusExecutable) {
            return base.Channel.GetShellAsync(statusExecutable);
        }
    }
}
